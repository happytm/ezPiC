"""
...TODO
"""
import logging
import time

import Tool
import G

###################################################################################################
# Globals:

THREAD = None

CYCLICTIMEHANDLER = []

###################################################################################################

def __exit__():
    print('<<<<<<<<EXIT>>>>>>>>>')

###################################################################################################

def thread_timer_loop():
    """ TODO """
    global CYCLICTIMEHANDLER

    while G.RUN:
        for func, args in CYCLICTIMEHANDLER:
            try:
                func(args)
            except:
                pass
        time.sleep(0.100)

###################################################################################################

def init():
    """ Prepare module vars and load plugins """
    pass

###################################################################################################

def run():
    """ TODO """
    global THREAD

    logging.debug('Starting scheduler thread')
    if not THREAD:
        THREAD = Tool.start_thread(thread_timer_loop)

    #add_cmd(3, 'Hallo')

###################################################################################################

def register_cyclic_hnadler(func, args=()):
    """ TODO """

    CYCLICTIMEHANDLER.append((func, args))

###################################################################################################

# =================================================================================================


    
###################################################################################################
###################################################################################################
###################################################################################################
